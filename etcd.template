{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Mappings": {
    "AvailablityZones": {
      "ap-northeast-1": {
        "0": "ap-northeast-1a",
        "1": "ap-northeast-1c",
        "2": "ap-northeast-1d"
      },
      "ap-south-1": {
        "0": "ap-south-1a",
        "1": "ap-south-1b"
      },
      "ap-northeast-2": {
        "0": "ap-northeast-2a",
        "1": "ap-northeast-2c"
      },
      "ap-southeast-1": {
        "0": "ap-southeast-1a",
        "1": "ap-southeast-1b",
        "2": "ap-southeast-1c"
      },
      "ap-southeast-2": {
        "0": "ap-southeast-2a",
        "1": "ap-southeast-2b",
        "2": "ap-southeast-2c"
      },
      "eu-central-1": {
        "0": "eu-central-1a",
        "1": "eu-central-1b",
        "2": "eu-central-1c"
      },
      "eu-west-1": {
        "0": "eu-west-1a",
        "1": "eu-west-1b",
        "2": "eu-west-1c"
      },
      "sa-east-1": {
        "0": "sa-east-1a",
        "1": "sa-east-1b",
        "2": "sa-east-1c"
      },
      "us-east-1": {
        "0": "us-east-1a",
        "1": "us-east-1b",
        "2": "us-east-1c",
        "3": "us-east-1d",
        "4": "us-east-1e",
        "5": "us-east-1f"
      },
      "us-west-1": {
        "0": "us-west-1b",
        "1": "us-west-1c"
      },
      "us-west-2": {
        "0": "us-west-2a",
        "1": "us-west-2b",
        "2": "us-west-2c"
      }
    },
    "CoreOSAMI": {
      "ap-northeast-1": {
        "hvm": "ami-0b53d79c2d092ce77",
        "pv": "ami-07bac8d675b35e587"
      },
      "ap-northeast-2": {
        "hvm": "ami-0a07af788e926e417",
        "pv": ""
      },
      "ap-south-1": {
        "hvm": "ami-06103b4b4747ad077",
        "pv": ""
      },
      "ap-southeast-1": {
        "hvm": "ami-0b0cfecc8175d06c6",
        "pv": "ami-02c7f68bd43bb3cef"
      },
      "ap-southeast-2": {
        "hvm": "ami-03ec12353f77620c4",
        "pv": "ami-0dbc10b5920f7e072"
      },
      "ca-central-1": {
        "hvm": "ami-07ec21c807d0c5176",
        "pv": ""
      },
      "cn-north-1": {
        "hvm": "ami-054d6909d91900dcf",
        "pv": "ami-02959c79557941cc1"
      },
      "cn-northwest-1": {
        "hvm": "ami-0bf16b12c53c5e9a3",
        "pv": ""
      },
      "eu-central-1": {
        "hvm": "ami-0cfe08bc0484060f5",
        "pv": "ami-02d1a2f9c9d3bfae5"
      },
      "eu-west-1": {
        "hvm": "ami-081f4de2b0f6032c6",
        "pv": "ami-025424961938fb048"
      },
      "eu-west-2": {
        "hvm": "ami-0a937eebe9caafbb1",
        "pv": ""
      },
      "eu-west-3": {
        "hvm": "ami-0bf3ed517b76f5c0d",
        "pv": ""
      },
      "sa-east-1": {
        "hvm": "ami-09359810f00df88f2",
        "pv": "ami-0d1e38ba1866b81f4"
      },
      "us-east-1": {
        "hvm": "ami-0547d9705af5e8fb2",
        "pv": "ami-04cd3bf19e1cb48ed"
      },
      "us-east-2": {
        "hvm": "ami-08cb94999d76c8e42",
        "pv": ""
      },
      "us-gov-west-1": {
        "hvm": "ami-00c3a061",
        "pv": "ami-ecc1a28d"
      },
      "us-west-1": {
        "hvm": "ami-0b349483829492b39",
        "pv": "ami-0944222061c50230a"
      },
      "us-west-2": {
        "hvm": "ami-0c1cc1260c7828fcb",
        "pv": "ami-0c32a360898f214ca"
      }
    },
    "VirtType": {
      "c1.medium": {
        "64": "pv"
      },
      "c1.xlarge": {
        "64": "pv"
      },
      "c3.2xlarge": {
        "64": "hvm"
      },
      "c3.4xlarge": {
        "64": "hvm"
      },
      "c3.8xlarge": {
        "64": "hvm"
      },
      "c3.large": {
        "64": "hvm"
      },
      "c3.xlarge": {
        "64": "hvm"
      },
      "c4.2xlarge": {
        "64": "hvm"
      },
      "c4.4xlarge": {
        "64": "hvm"
      },
      "c4.8xlarge": {
        "64": "hvm"
      },
      "c4.large": {
        "64": "hvm"
      },
      "c4.xlarge": {
        "64": "hvm"
      },
      "cc2.8xlarge": {
        "64": "hvm"
      },
      "cr1.8xlarge": {
        "64": "hvm"
      },
      "g2.2xlarge": {
        "64": "HVMG2"
      },
      "hi1.4xlarge": {
        "64": "hvm"
      },
      "hs1.8xlarge": {
        "64": "hvm"
      },
      "i2.2xlarge": {
        "64": "hvm"
      },
      "i2.4xlarge": {
        "64": "hvm"
      },
      "i2.8xlarge": {
        "64": "hvm"
      },
      "i2.xlarge": {
        "64": "hvm"
      },
      "m1.large": {
        "64": "pv"
      },
      "m1.medium": {
        "64": "pv"
      },
      "m1.small": {
        "64": "pv"
      },
      "m1.xlarge": {
        "64": "pv"
      },
      "m2.2xlarge": {
        "64": "pv"
      },
      "m2.4xlarge": {
        "64": "pv"
      },
      "m2.xlarge": {
        "64": "pv"
      },
      "m3.2xlarge": {
        "64": "hvm"
      },
      "m3.large": {
        "64": "hvm"
      },
      "m3.medium": {
        "64": "hvm"
      },
      "m3.xlarge": {
        "64": "hvm"
      },
      "r3.2xlarge": {
        "64": "hvm"
      },
      "r3.4xlarge": {
        "64": "hvm"
      },
      "r3.8xlarge": {
        "64": "hvm"
      },
      "r3.large": {
        "64": "hvm"
      },
      "r3.xlarge": {
        "64": "hvm"
      },
      "t1.micro": {
        "64": "pv"
      },
      "t2.medium": {
        "64": "hvm"
      },
      "t2.micro": {
        "64": "hvm"
      },
      "t2.small": {
        "64": "hvm"
      }
    }
  },
  "Parameters": {
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "VPC ID"
    },
    "VpcSubnet0": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "VPC subnet 0 ID"
    },
    "VpcSubnet1": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "VPC subnet 1 ID"
    },
    "Application": {
      "Type": "String",
      "Default": "1",
      "Description": "Number of master instances"
    },
    "InstanceType": {
      "Type": "String",
      "Default": "t2.small",
      "Description": "The type of instance"
    },
    "KeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Number of master instances"
    },
    "MasterScale": {
      "Type": "String",
      "Default": "2",
      "Description": "Number of master instances"
    }
  },
  "Resources": {
    "BackupBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {}
    },
    "HealthTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": {
          "Fn::Join": [
            "",
            [
              "cloudwatch notifications for",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        }
      }
    },
    "MasterAutoscale": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 2,
          "Timeout": "PT20M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": 2,
          "PauseTime": "PT20M",
          "WaitOnResourceSignals": true
        }
      },
      "Properties": {
        "AvailabilityZones": [
          {
            "Fn::FindInMap": [
              "AvailablityZones",
              {
                "Ref": "AWS::Region"
              },
              "0"
            ]
          },
          {
            "Fn::FindInMap": [
              "AvailablityZones",
              {
                "Ref": "AWS::Region"
              },
              "1"
            ]
          }
        ],
        "Cooldown": "300",
        "DesiredCapacity": "2",
        "HealthCheckGracePeriod": 300,
        "HealthCheckType": "EC2",
        "LaunchConfigurationName": {
          "Ref": "MasterLaunchConfiguration"
        },
        "LoadBalancerNames": [
          {
            "Ref": "MasterLoadBalancer"
          }
        ],
        "MaxSize": "4",
        "MinSize": "2",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-asg-master"
                ]
              ]
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "application",
            "Value": {
              "Ref": "Application"
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "cluster",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-asg-master-cluster"
                ]
              ]
            },
            "PropagateAtLaunch": true
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VpcSubnet0"
          },
          {
            "Ref": "VpcSubnet1"
          }
        ]
      }
    },
    "MasterBackupHealthAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "HealthTopic"
          }
        ],
        "AlarmDescription": "key backup count",
        "AlarmName": "MasterBackupKeyCount",
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "MasterAutoscale"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
          {
            "Ref": "HealthTopic"
          }
        ],
        "MetricName": "BackupKeyCount",
        "Namespace": "Local/etcd",
        "OKActions": [
          {
            "Ref": "HealthTopic"
          }
        ],
        "Period": 300,
        "Statistic": "Minimum",
        "Threshold": "1",
        "Unit": "Count"
      }
    },
    "MasterInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "MasterInstanceRole"
          }
        ]
      }
    },
    "MasterInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowIntrospection",
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeInstances",
                    "autoscaling:DescribeAutoScalingGroups",
                    "autoscaling:DescribeLifecycleHooks",
                    "autoscaling:CompleteLifecycleAction"
                  ],
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Sid": "AllowBackupBucket",
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "BackupBucket"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Sid": "AllowPutMetric",
                  "Effect": "Allow",
                  "Action": [
                    "cloudwatch:PutMetricData"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            },
            "PolicyName": "MasterInstancePolicy"
          }
        ]
      }
    },
    "MasterLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "DependsOn": [
        "BackupBucket"
      ],
      "Properties": {
        "AssociatePublicIpAddress": true,
        "IamInstanceProfile": {
          "Ref": "MasterInstanceProfile"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "CoreOSAMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "VirtType",
                {
                  "Ref": "InstanceType"
                },
                "64"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyPair"
        },
        "SecurityGroups": [
          {
            "Ref": "MasterSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#cloud-config\n\nwrite_files:\n  - path: \"/etc/etcd_aws.env\"\n    permissions: \"0444\"\n    owner: \"root\"\n    content: \"ETCD_BACKUP_BUCKET=",
                {
                  "Ref": "BackupBucket"
                },
                "\"\ncoreos:\n  units:\n    - name: etcd-aws.service\n      command: start\n      enable: true\n      content: |\n        [Unit]\n        Description=configures and runs etcd in AWS.\n        \n        [Install]\n        WantedBy=multi-user.target\n        \n        [Service]\n        Restart=always\n        EnvironmentFile=/etc/etcd_aws.env\n        ExecStart=/bin/bash -c '\\\n        set -ex; \\\n        docker run --rm --name etcd-aws \\\n          -p 2379:2379 -p 2380:2380 \\\n          -v /var/lib/etcd3:/var/lib/etcd3 \\\n          -e ETCD_BACKUP_BUCKET -e ETCD_BACKUP_KEY -e ETCD_MAJOR_VERSION='3' \\\n          ksowh/etcd-aws; \\\n        '\n        ExecStop=-/usr/bin/docker rm -f etcd-aws\n        \n    - name: cfn-signal.service\n      command: start\n      enable: true\n      content: |\n        [Unit]\n        Description=Cloudformation Signal Ready\n        After=etcd-aws.service\n        Requires=etcd-aws.service\n        \n        [Install]\n        WantedBy=multi-user.target\n        \n        [Service]\n        Type=oneshot\n        EnvironmentFile=/etc/environment\n        ExecStart=/bin/bash -c '\\\n        set -ex; \\\n        eval $(docker run ksowh/ec2cluster); \\\n        docker run --rm ksowh/awscli cfn-signal \\\n          --resource MasterAutoscale --stack $TAG_AWS_CLOUDFORMATION_STACK_ID \\\n          --region $REGION || true; \\\n        '\n        \n"
              ]
            ]
          }
        }
      }
    },
    "MasterLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "10",
          "Target": "HTTP:2379/health",
          "Timeout": "5",
          "UnhealthyThreshold": "10"
        },
        "Listeners": [
          {
            "InstancePort": "2379",
            "LoadBalancerPort": "2379",
            "Protocol": "TCP",
            "InstanceProtocol": "TCP"
          }
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Ref": "MasterLoadBalancerSecurityGroup"
          }
        ],
        "Subnets": [
          {
            "Ref": "VpcSubnet0"
          },
          {
            "Ref": "VpcSubnet1"
          }
        ]
      }
    },
    "MasterLoadBalancerHealthAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "DependsOn": [
        "HealthTopic"
      ],
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "HealthTopic"
          }
        ],
        "AlarmDescription": "master instance health",
        "AlarmName": "MasterInstanceHealth",
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": [
          {
            "Name": "LoadBalancerName",
            "Value": {
              "Ref": "MasterLoadBalancer"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "MetricName": "HealthyHostCount",
        "Namespace": "AWS/ELB",
        "OKActions": [
          {
            "Ref": "HealthTopic"
          }
        ],
        "Period": 60,
        "Statistic": "Minimum",
        "Threshold": "1",
        "Unit": "Count"
      }
    },
    "MasterLoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": {
          "Fn::Join": [
            "",
            [
              "LoadBalancer-",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        },
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 2379,
            "IpProtocol": "tcp",
            "ToPort": 2379
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    },
    "MasterSecurityEtcdClusterTcp2379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "FromPort": 2379,
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MasterSecurityGroup",
            "GroupId"
          ]
        },
        "ToPort": 2379
      }
    },
    "MasterSecurityEtcdClusterTcp2380": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "FromPort": 2380,
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MasterSecurityGroup",
            "GroupId"
          ]
        },
        "ToPort": 2380
      }
    },
    "MasterSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": {
          "Fn::Join": [
            "",
            [
              "SecurityGroup-",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        },
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    },
    "MasterSecurityIngressFromLoadBalancerTcp2379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "FromPort": 2379,
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MasterLoadBalancerSecurityGroup",
            "GroupId"
          ]
        },
        "ToPort": 2379
      }
    }
  }
}